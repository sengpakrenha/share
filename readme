---------------------------filebeat-installation-----------------------
sudo apt-get install apt-transport-https
curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elastic-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/elastic-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | \
sudo tee /etc/apt/sources.list.d/elastic-8.x.list
sudo apt-get update
sudo apt-get install filebeat
sudo nano /etc/filebeat/filebeat.yml
"output.elasticsearch:
  hosts: ["http://localhost:9200"]
"
sudo filebeat modules enable system
sudo filebeat test config
sudo systemctl enable filebeat
sudo systemctl start filebeat
sudo filebeat setup --dashboards
---------------------------kibana-installation--------------------------
sudo apt-get install apt-transport-https
curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | \
  sudo gpg --dearmor -o /usr/share/keyrings/elastic-keyring.gpg

echo "deb [signed-by=/usr/share/keyrings/elastic-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | \
  sudo tee /etc/apt/sources.list.d/elastic-8.x.list

sudo apt-get update
----
sudo apt-get install kibana
----
sudo systemctl enable kibana
sudo systemctl start kibana
----
curl http://localhost:5601/api/status
----
sudo filebeat setup --dashboards
--------------------------elasticsearch----------------------
sudo apt-get install apt-transport-https
curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | \
  sudo gpg --dearmor -o /usr/share/keyrings/elastic-keyring.gpg

echo "deb [signed-by=/usr/share/keyrings/elastic-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | \
  sudo tee /etc/apt/sources.list.d/elastic-8.x.list

sudo apt-get update
---------------
sudo apt-get install elasticsearch
----------
sudo systemctl enable elasticsearch
sudo systemctl start elasticsearch
---------
curl -k http://localhost:9200
---------
sudo cat /var/lib/elasticsearch/elastic-search-setup-passwords.log
---------
sudo nano /etc/kibana/kibana.yml
---------
elasticsearch.hosts: ["http://localhost:9200"]
elasticsearch.username: "elastic"
elasticsearch.password: "the-password-you-got"
-----------
sudo systemctl restart kibana
-----------
curl http://localhost:5601/api/status
-----------
sudo filebeat setup --dashboards
------------------------kibana-config--------------------
curl -u "elastic:-----------" -k -X POST "https://localhost:9200/_security/user/kibana_system" \
  -H "Content-Type: application/json" -d '
{
  "password" : "-------",
  "roles" : [ "kibana_system" ],
  "full_name" : "Kibana System User"
}'

---------
sudo nano /etc/kibana/kibana.yml
---------
elasticsearch.hosts: ["https://localhost:9200"]
elasticsearch.username: "kibana_system"
elasticsearch.password: "-------------------"
elasticsearch.ssl.verificationMode: none
---------
sudo systemctl restart kibana
---------
sudo journalctl -u kibana -f
---------
curl http://localhost:5601/api/status
---------------------------nginx--------------------
server {
    listen 8050;
    server_name kibana.local;

    location / {
        proxy_pass http://localhost:5601;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

server {
    listen 8051;
    server_name elastic.local;

    location / {
        proxy_pass https://localhost:9200;
        proxy_ssl_verify off;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
    }
}

-----------------------------------------
sudo ln -s /etc/nginx/sites-available/elastic /etc/nginx/sites-enabled/
sudo systemctl restart nginx
------------------------------------------
ssh -L 5601:localhost:5601 user@192.168.13.229
-----------------------------------------------
server {
    listen 0.0.0.0:8043;  # or use 443 if you're adding SSL
    server_name wazuh.local;

    location / {
        proxy_pass https://192.168.13.177;  # Wazuh server IP
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_ssl_verify off;  # since Wazuh might use self-signed cert
    }
}
-------------------------------------------------
sudo ln -s /etc/nginx/sites-available/wazuh /etc/nginx/sites-enabled/
sudo nginx -t
sudo systemctl reload nginx
-------------------------------
